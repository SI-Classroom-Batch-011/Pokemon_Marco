package Items


import Pokemon.Pokemon

// Klasse f√ºr den Pokeball
open class Pokeball : Items() {

    /**
     * Diese Funktion erm√∂glicht es dem Spieler, ein wildes Pok√©mon zu fangen, basierend auf einer Erfolgschance.
     *
     * @param wildPokemon Das wilde Pok√©mon, das gefangen werden soll.
     * @param erfolgschance Die Erfolgschance f√ºr das Fangen des wilden Pok√©mon (im Bereich von 0 bis 100).
     * @param trainerPokemon Die Liste der Pok√©mon des Spielers, in der das gefangene Pok√©mon hinzugef√ºgt wird, falls erfolgreich.
     * @return True, wenn das Pok√©mon erfolgreich gefangen wurde, andernfalls False.
     */
    fun pokemonFangen(wildPokemon: Pokemon, erfolgschance: Int, trainerPokemon: MutableList<Pokemon>): Boolean {
        // Ausgabe, dass der Fangversuch gestartet wird.
        printLetterByLetter("üï∏Ô∏è Du versuchst, das Wilde ${wildPokemon.name} zu fangen ‚ÄºÔ∏è üï∏Ô∏è\n")

        if (erfolgschance >= 0 && erfolgschance <= 100) {
            // Zuf√§llige Generierung einer Fangchance zwischen 0 und 100.
            val fangchance = (0..100).random()

            if (fangchance < erfolgschance) {
                if (trainerPokemon.size <= 4) {
                    // Erfolgreicher Fang: Ausgabe und Hinzuf√ºgen des gefangenen Pok√©mon zur Trainerliste.
                    println("üëç Erfolgreich ‚ÄºÔ∏è Du hast ${wildPokemon.name} gefangen üï∏ üëç\n")
                    printLetterByLetter("‚ùå Kampf beendet ‚ùå\n")
                    printLetterByLetter("üåçL√§uft Durch die Welt üåé\n")
                    trainerPokemon.add(wildPokemon)
                } else {
                    // Der Trainer hat bereits zu viele Pok√©mon.
                    println("‚ùå Du hast zu viele Pok√©mon ‚ùå\n")
                }
                return true
            } else {
                // Der Fangversuch war nicht erfolgreich.
                printLetterByLetter("‚ùå Leider nicht erfolgreich ‚ùå ${wildPokemon.name} ist entkommen üí®üí®\n")
                printLetterByLetter("‚ùå Kampf beendet ‚ùå\n")
                printLetterByLetter("üåç L√§uft Durch die Welt üåé\n")
            }
        }

        // R√ºckgabe, dass der Fangversuch nicht erfolgreich war.
        return false
    }
}


/**
 * Diese Funktion gibt einen Text Buchstabe f√ºr Buchstabe aus und simuliert dadurch einen typischen Texteffekt.
 *
 * @param text Der Text, der Buchstabe f√ºr Buchstabe ausgegeben werden soll.
 */
fun printLetterByLetter(text: String) {
    for (char in text) {
        print(char)
        Thread.sleep(0)
    }
}

// Zukunftsfunktion
fun pokemonAustauschen() {

}